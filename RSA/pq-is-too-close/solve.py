from Crypto.Util.number import *
import gmpy2

n=  162760338201233932046097307406290608386870762787163984861485760010681485611879728431424518113647631000279504272840124080967790702784592209480665752172474847008341035874770442450530410188569371957907122861028896624422579459175868953704924318470765194922972708076923079903491930817359489620421885547218347873147
e=  65537
c=  114966493024496941580444205946975241952769298186858462236667840067655522232093800000681854232574437058695001950640781797956862005021749381707089388378964651298673797081829675578043307319749227648198389426483747843440634403680355459358136806334159876582838077986572506572080433249686649392890384317261621713125

temp=gmpy2.iroot(n,2)[0]  
p=gmpy2.next_prime(temp)
q=n//p
print(p)
print(q)

phi = (q - 1) * (p - 1)
d = gmpy2.invert(e , phi)

print(long_to_bytes(pow(c , d , n)))


